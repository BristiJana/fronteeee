{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\RegLog\\\\src\\\\components\\\\List.js\";\nimport { useState } from \"react\";\nimport './List.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet module = require('./Listy.js');\n\nfunction List(props) {\n  let serviceList = module.serviceList;\n  var num = props.ini; //   const [serviceList, setServiceList] = useState([num:[{ service: \"\" }]]);\n\n  serviceList[num] = [{\n    service: \"\"\n  }];\n\n  const handleServiceChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...serviceList[num]];\n    list[index][name] = value;\n    serviceList[num] = list;\n  };\n\n  const handleServiceRemove = index => {\n    const list = [...serviceList[num]];\n    list.splice(index, 1);\n    serviceList[num] = list;\n  };\n\n  const handleServiceAdd = () => {\n    serviceList = [...serviceList[num], {\n      service: \"\"\n    }];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"App\",\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"service\",\n        children: \"Service(s)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), serviceList[num].map((singleService, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"services\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"first-division\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"service\",\n            type: \"text\",\n            id: \"service\",\n            value: singleService.service,\n            onChange: e => handleServiceChange(e, index),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), serviceList.length - 1 === index && serviceList.length < 4 && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleServiceAdd,\n            className: \"add-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add a Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"second-division\",\n          children: serviceList.length !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleServiceRemove(index),\n            className: \"remove-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/RegLog/src/components/List.js"],"names":["useState","module","require","List","props","serviceList","num","ini","service","handleServiceChange","e","index","name","value","target","list","handleServiceRemove","splice","handleServiceAdd","map","singleService","length"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport './List.css';\r\nlet module = require('./Listy.js');\r\n\r\n\r\nfunction List(props) {\r\n    let serviceList = module.serviceList;\r\n    var num=props.ini;\r\n//   const [serviceList, setServiceList] = useState([num:[{ service: \"\" }]]);\r\n\r\nserviceList[num]=[{service:\"\"}]\r\n\r\n  const handleServiceChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...serviceList[num]];\r\n    list[index][name] = value;\r\n    serviceList[num]=list;\r\n  };\r\n\r\n  const handleServiceRemove = (index) => {\r\n    const list = [...serviceList[num]];\r\n    list.splice(index, 1);\r\n    serviceList[num]=list;\r\n  };\r\n\r\n  const handleServiceAdd = () => {\r\n    serviceList=[...serviceList[num], { service: \"\" }];\r\n  };\r\n\r\n  return (\r\n    <form className=\"App\" autoComplete=\"off\">\r\n      <div className=\"form-field\">\r\n        <label htmlFor=\"service\">Service(s)</label>\r\n        {serviceList[num].map((singleService, index) => (\r\n          <div key={index} className=\"services\">\r\n            <div className=\"first-division\">\r\n              <input\r\n                name=\"service\"\r\n                type=\"text\"\r\n                id=\"service\"\r\n                value={singleService.service}\r\n                onChange={(e) => handleServiceChange(e, index)}\r\n                required\r\n              />\r\n              {serviceList.length - 1 === index && serviceList.length < 4 && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleServiceAdd}\r\n                  className=\"add-btn\"\r\n                >\r\n                  <span>Add a Service</span>\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className=\"second-division\">\r\n              {serviceList.length !== 1 && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleServiceRemove(index)}\r\n                  className=\"remove-btn\"\r\n                >\r\n                  <span>Remove</span>\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n    </form>\r\n  );\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}