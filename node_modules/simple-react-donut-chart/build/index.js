'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _templateObject = _taggedTemplateLiteral(['\n\tdisplay: block;\n\tcolor: ', ';\n\t&:before {\n\t\t\tcontent: \'\';\n\t\t\tbackground-color: ', ';\n\t}\n'], ['\n\tdisplay: block;\n\tcolor: ', ';\n\t&:before {\n\t\t\tcontent: \'\';\n\t\t\tbackground-color: ', ';\n\t}\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n\tbackground-color: ', ';\n\tbackground-image: linear-gradient(to right, ', ' 0%, ', ' 50%, ', ' 50%,', ' 100%);\n\t&:before {\n\t\tcontent: \'\';\n\t\ttransform: rotate(', 'deg);\n\t\tbackground-color: inherit;\n\t}\n\t&:after {\n\t\tbackground: ', ';\n\t\tcontent: \'\';\n\t}\n'], ['\n\tbackground-color: ', ';\n\tbackground-image: linear-gradient(to right, ', ' 0%, ', ' 50%, ', ' 50%,', ' 100%);\n\t&:before {\n\t\tcontent: \'\';\n\t\ttransform: rotate(', 'deg);\n\t\tbackground-color: inherit;\n\t}\n\t&:after {\n\t\tbackground: ', ';\n\t\tcontent: \'\';\n\t}\n']);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

/**
* @author zilahir
* @function DonoutChart
* */

var Indicator = _styledComponents2.default.li(_templateObject, function (props) {
	return props.color;
}, function (props) {
	return props.color;
});

var Circle = _styledComponents2.default.div(_templateObject2, function (props) {
	return props.colorStart;
}, function (props) {
	return props.colorStart;
}, function (props) {
	return props.colorStart;
}, function (props) {
	return props.colorEnd;
}, function (props) {
	return props.colorEnd;
}, function (props) {
	return props.deg;
}, function (props) {
	return props.circleColor;
});

var DonoutChart = function DonoutChart(props) {
	var colorOff = props.colorOff,
	    colorOn = props.colorOn,
	    percentage = props.percentage,
	    labelOn = props.labelOn,
	    labelOff = props.labelOff,
	    baseClass = props.baseClass,
	    circleColor = props.circleColor,
	    textStyle = props.textStyle,
	    labelStyle = props.labelStyle;


	var deg = percentage > 50 ? (percentage - 50) / 100 * 360 : percentage / 100 * 360;

	return _react2.default.createElement(
		'div',
		{ className: 'donutContainer ' + baseClass },
		_react2.default.createElement(Circle, {
			deg: deg,
			colorStart: colorOn,
			colorEnd: colorOff,
			className: 'circle',
			circleColor: circleColor
		}),
		_react2.default.createElement(
			'div',
			{ className: 'details details--' + baseClass },
			_react2.default.createElement(
				'h2',
				{
					style: _extends({}, textStyle)
				},
				'Content usage'
			),
			_react2.default.createElement(
				'h1',
				{
					style: _extends({}, textStyle)
				},
				'25%'
			),
			_react2.default.createElement(
				'ul',
				null,
				_react2.default.createElement(
					Indicator,
					{
						color: colorOff,
						className: 'indicator off indicator-off--' + baseClass,
						style: _extends({}, labelStyle.off)
					},
					labelOff
				),
				_react2.default.createElement(
					Indicator,
					{
						color: colorOn,
						className: 'indicator on  indicator-on--' + baseClass,
						style: _extends({}, labelStyle.on)
					},
					labelOn
				)
			)
		)
	);
};

DonoutChart.defaultProps = {
	baseClass: '',
	circleColor: '#fff',
	labelStyle: {},
	percentage: 0,
	textStyle: {}
};

DonoutChart.propTypes = {
	baseClass: _propTypes2.default.string,
	circleColor: _propTypes2.default.string,
	colorOff: _propTypes2.default.string.isRequired,
	colorOn: _propTypes2.default.string.isRequired,
	labelOff: _propTypes2.default.string.isRequired,
	labelOn: _propTypes2.default.string.isRequired,
	labelStyle: _propTypes2.default.objectOf(_propTypes2.default.objectOf(_propTypes2.default.string)),
	percentage: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
	textStyle: _propTypes2.default.objectOf(_propTypes2.default.string)
};

exports.default = DonoutChart;
